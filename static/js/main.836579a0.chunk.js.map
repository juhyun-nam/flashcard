{"version":3,"sources":["reducer.ts","components/Header.tsx","StudyMethod.ts","components/StudyMethodInput.tsx","components/StudySourceInput.tsx","screens/Home.tsx","actions.ts","components/FlashCard.tsx","screens/Study.tsx","App.tsx","index.tsx"],"names":["defaultState","cards","Header","AppBar","position","Toolbar","Typography","variant","StudyMethod","StudyMethodInput","method","setMethod","FormControl","component","FormLabel","RadioGroup","aria-label","name","value","onChange","event","newMethod","target","FormControlLabel","SHUFFLE","control","Radio","label","RANDOM","StudySourceInput","sources","setSources","handleChange","newSources","map","elem","checked","key","Home","setScreen","useState","labels","data","subject","dispatch","useDispatch","Box","Grid","container","spacing","item","xs","Paper","elevation","p","my","Button","color","fullWidth","onClick","cardList","forEach","index","concat","contents","type","FlashCard","front","back","flipped","setFlip","cardStyle","width","height","renderCard","content","Card","style","CardContent","isFlipped","flipDirection","Study","useSelector","state","cardIndex","setCardIndex","iconStyle","IconButton","length","App","screen","Container","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.836579a0.chunk.js","sourcesContent":["import { Action } from './actions';\nimport { Card } from './Card';\n\nexport interface AppState {\n  cards: Array<Card>;\n}\n\nconst defaultState: AppState = {\n  cards: [],\n};\n\nexport default function reducer(state = defaultState, action: Action): AppState {\n  switch (action.type) {\n    case 'CARDS':\n      return { ...state, cards: action.cards } as AppState;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Header() {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h4\">\n          FlashCard\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","enum StudyMethod {\n  NONE,\n  SHUFFLE,\n  RANDOM\n}\n\nexport default StudyMethod;\n","import React, { Dispatch } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport StudyMethod from '../StudyMethod';\n\ntype StudyMethodInputProp = {\n  method: StudyMethod,\n  setMethod: Dispatch<StudyMethod>\n};\n\nexport default function StudyMethodInput({ method, setMethod }: StudyMethodInputProp) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newMethod = StudyMethod[(event.target.value as keyof typeof StudyMethod)];\n    setMethod(newMethod);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Study Type</FormLabel>\n      <RadioGroup aria-label=\"gender\" name=\"gender1\" value={StudyMethod[method]} onChange={handleChange}>\n        <FormControlLabel value={StudyMethod[StudyMethod.SHUFFLE]} control={<Radio />} label=\"Shuffle\" />\n        <FormControlLabel value={StudyMethod[StudyMethod.RANDOM]} control={<Radio />} label=\"Random\" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import React, { Dispatch } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport CheckBox from '@material-ui/core/Checkbox';\n\ntype Source = {\n  label: string,\n  checked: boolean,\n};\ntype StudySourceInputProp = {\n  sources: Array<Source>,\n  setSources: Dispatch<Array<Source>>\n};\n\nexport default function StudySourceInput({ sources, setSources }: StudySourceInputProp) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newSources = sources.map((elem) => ({\n      ...elem, checked: (elem.label === event.target.name ? event.target.checked : elem.checked),\n    }));\n    setSources(newSources);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Study Source</FormLabel>\n      {\n        sources.map((elem) => (\n          <FormControlLabel\n            key={elem.label}\n            label={elem.label}\n            control={<CheckBox checked={elem.checked} onChange={handleChange} name={elem.label} />}\n          />\n        ))\n      }\n    </FormControl>\n  );\n}\n","import React, { Dispatch, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nimport StudyMethodInput from '../components/StudyMethodInput';\nimport StudySourceInput from '../components/StudySourceInput';\nimport StudyMethod from '../StudyMethod';\nimport { CardsAction } from '../actions';\nimport { Card } from '../Card';\nimport cards from '../data/cards.json';\n\ntype HomeProps = {\n  setScreen: Dispatch<string>\n};\n\nexport default function Home({ setScreen }: HomeProps) {\n  const [method, setMethod] = useState(StudyMethod.SHUFFLE);\n  const labels = cards.data.map((elem) => ({ label: elem.subject, checked: true }));\n  const [sources, setSources] = useState(labels);\n  const dispatch = useDispatch();\n\n  const handleStartButton = () => {\n    let cardList = [] as Array<Card>;\n    sources.forEach((elem, index) => {\n      if (elem.checked) {\n        cardList = cardList.concat(cards.data[index].contents);\n      }\n    });\n    dispatch(CardsAction(cardList));\n    setScreen('study');\n  };\n  return (\n    <Box>\n      <Grid container spacing={2}>\n        <Grid item xs>\n          <Paper elevation={3}>\n            <Box p={1}>\n              <StudyMethodInput method={method} setMethod={setMethod} />\n            </Box>\n          </Paper>\n        </Grid>\n        <Grid item xs>\n          <Paper elevation={3}>\n            <Box p={1}>\n              <StudySourceInput sources={sources} setSources={setSources} />\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Box my={2}>\n        <Button color=\"secondary\" fullWidth variant=\"contained\" onClick={handleStartButton}>\n          Go Study\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import { Card } from './Card';\n\nexport interface Action {\n  type: 'CARDS';\n  cards: Array<Card>;\n}\n\nexport function CardsAction(cards: Array<Card>): Action {\n  return { type: 'CARDS', cards };\n}\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Flip from 'react-card-flip';\n\ntype FlashCardProp = {\n  front: string,\n  back: string\n};\n\nexport default function FlashCard({ front, back }: FlashCardProp) {\n  const [flipped, setFlip] = useState(false);\n  const cardStyle = {\n    width: '100%',\n    height: '25vh',\n  };\n  const renderCard = (key: string, content: string, onClick: () => void) => (\n    <Card style={cardStyle} elevation={24} key={key} onClick={onClick}>\n      <CardContent>\n        {content}\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <Box>\n      <Flip isFlipped={flipped} flipDirection=\"horizontal\">\n        {renderCard('front', front, () => { setFlip(true); })}\n        {renderCard('back', back, () => { setFlip(false); })}\n      </Flip>\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n// import Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport PrevIcon from '@material-ui/icons/ArrowBackIos';\nimport NextIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport { AppState } from '../reducer';\nimport FlashCard from '../components/FlashCard';\n\nexport default function Study() {\n  const cards = useSelector((state: AppState) => state.cards);\n  const [cardIndex, setCardIndex] = useState(0);\n  const prev = () => { if (cardIndex !== 0) { setCardIndex(cardIndex - 1); } };\n  const next = () => { if (cardIndex !== cards.length) { setCardIndex(cardIndex + 1); } };\n  const iconStyle = {\n    width: '100%',\n    height: '100%',\n  };\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={3}>\n        <IconButton style={iconStyle} onClick={next}>\n          <PrevIcon />\n        </IconButton>\n      </Grid>\n      <Grid item xs={6}>\n        <FlashCard front={cards[cardIndex].front} back={cards[cardIndex].back} />\n      </Grid>\n      <Grid item xs={3}>\n        <IconButton style={iconStyle} onClick={prev}>\n          <NextIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\nimport Header from './components/Header';\nimport Home from './screens/Home';\nimport Study from './screens/Study';\n\nfunction App() {\n  const [screen, setScreen] = useState('home');\n  const renderHome = () => (\n    <Home setScreen={setScreen} />\n  );\n  const renderStudy = () => (\n    <Study />\n  );\n  return (\n    <Container>\n      <Header />\n      <Box my={4}>\n        {screen === 'home' ? renderHome() : renderStudy()}\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport reducer from './reducer';\nimport App from './App';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}