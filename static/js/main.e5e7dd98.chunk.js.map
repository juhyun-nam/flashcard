{"version":3,"sources":["screens/Header.tsx","types/StudyMethod.ts","components/StudyMethodInput.tsx","components/StudySourceInput.tsx","CardContainer.ts","screens/Home.tsx","components/FlashCard.tsx","screens/Study.tsx","App.tsx","index.tsx"],"names":["Header","AppBar","position","style","height","Toolbar","Typography","variant","StudyMethod","StudyMethodInput","method","setMethod","FormControl","component","FormLabel","RadioGroup","aria-label","name","value","onChange","event","newMethod","target","FormControlLabel","SHUFFLE","control","Radio","label","SHUFFLE_REVERSE","StudySourceInput","sources","setSources","handleChange","newSources","map","elem","checked","key","cards","index","reverse","this","current","front","back","subjects","data","forEach","item","includes","subject","contents","push","sort","Math","random","length","Home","setScreen","useState","labels","Box","my","Paper","elevation","p","Button","color","fullWidth","onClick","cardList","cardContainer","apply","FlipCard","title","subtitle","content","Card","width","minHeight","CardHeader","subheader","CardContent","FlashCard","flipped","setFlip","useEffect","animate","setAnimate","frontCard","backCard","className","setTimeout","Study","getContent","setContent","iconStyle","Grid","container","spacing","xs","IconButton","disabled","hasPrev","prev","hasNext","next","App","screen","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5e7dd98.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Header() {\n  return (\n    <AppBar position=\"static\" style={{ height: '100%' }}>\n      <Toolbar>\n        <Typography variant=\"h4\">\n          FlashCard\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","enum StudyMethod {\n  NONE,\n  SHUFFLE,\n  SHUFFLE_REVERSE\n}\n\nexport default StudyMethod;\n","import React, { Dispatch } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport StudyMethod from '../types/StudyMethod';\n\ntype StudyMethodInputProp = {\n  method: StudyMethod,\n  setMethod: Dispatch<StudyMethod>\n};\n\nexport default function StudyMethodInput({ method, setMethod }: StudyMethodInputProp) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newMethod = StudyMethod[(event.target.value as keyof typeof StudyMethod)];\n    setMethod(newMethod);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Study Type</FormLabel>\n      <RadioGroup\n        aria-label=\"gender\"\n        name=\"gender1\"\n        value={StudyMethod[method]}\n        onChange={handleChange}\n      >\n        <FormControlLabel\n          value={StudyMethod[StudyMethod.SHUFFLE]}\n          control={<Radio />}\n          label=\"Shuffle\"\n        />\n        <FormControlLabel\n          value={StudyMethod[StudyMethod.SHUFFLE_REVERSE]}\n          control={<Radio />}\n          label=\"Shuffle Reverse\"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import React, { Dispatch } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport CheckBox from '@material-ui/core/Checkbox';\n\ntype Source = {\n  label: string,\n  checked: boolean,\n};\ntype StudySourceInputProp = {\n  sources: Array<Source>,\n  setSources: Dispatch<Array<Source>>\n};\n\nexport default function StudySourceInput({ sources, setSources }: StudySourceInputProp) {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newSources = sources.map((elem) => ({\n      ...elem, checked: (elem.label === event.target.name ? event.target.checked : elem.checked),\n    }));\n    setSources(newSources);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Study Source</FormLabel>\n      {\n        sources.map((elem) => (\n          <FormControlLabel\n            key={elem.label}\n            label={elem.label}\n            control={<CheckBox checked={elem.checked} onChange={handleChange} name={elem.label} />}\n          />\n        ))\n      }\n    </FormControl>\n  );\n}\n","import Card from './types/Card';\nimport StudyMethod from './types/StudyMethod';\nimport cards from './data/cards.json';\n\nclass CardContainer {\n  private cards: Array<Card>;\n\n  private index: number;\n\n  private reverse: boolean;\n\n  getContent() {\n    const current = this.cards[this.index];\n    if (this.reverse) {\n      return { ...current, front: current.back, back: current.front };\n    }\n    return current;\n  }\n\n  constructor() {\n    this.cards = [];\n    this.index = 0;\n    this.reverse = false;\n  }\n\n  apply(subjects: Array<string>, method: StudyMethod) {\n    cards.data.forEach((item) => {\n      if (subjects.includes(item.subject)) {\n        item.contents.forEach((elem) => {\n          this.cards.push({ subject: item.subject, front: elem.front, back: elem.back });\n        });\n      }\n    });\n    switch (method) {\n      case StudyMethod.SHUFFLE:\n        this.cards.sort(() => Math.random() - 0.5);\n        break;\n      case StudyMethod.SHUFFLE_REVERSE:\n        this.cards.sort(() => Math.random() - 0.5);\n        this.reverse = true;\n        break;\n      default:\n        break;\n    }\n  }\n\n  hasNext() {\n    return this.index < this.cards.length - 1;\n  }\n\n  hasPrev() {\n    return this.index > 0;\n  }\n\n  next() {\n    this.index += 1;\n  }\n\n  prev() {\n    this.index -= 1;\n  }\n}\n\nexport default new CardContainer();\n","import React, { Dispatch, useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nimport StudyMethod from '../types/StudyMethod';\nimport StudyMethodInput from '../components/StudyMethodInput';\nimport StudySourceInput from '../components/StudySourceInput';\nimport cardContainer from '../CardContainer';\nimport cards from '../data/cards.json';\n\ntype HomeProps = {\n  setScreen: Dispatch<string>\n};\n\nexport default function Home({ setScreen }: HomeProps) {\n  const [method, setMethod] = useState(StudyMethod.SHUFFLE);\n  const labels = cards.data.map((elem) => ({ label: elem.subject, checked: true }));\n  const [sources, setSources] = useState(labels);\n\n  const handleStartButton = () => {\n    const cardList = [] as Array<string>;\n    sources.forEach((elem) => {\n      if (elem.checked) {\n        cardList.push(elem.label);\n      }\n    });\n    cardContainer.apply(cardList, method);\n    setScreen('study');\n  };\n  return (\n    <>\n      <Box my={1}>\n        <Paper elevation={3}>\n          <Box p={1}>\n            <StudyMethodInput method={method} setMethod={setMethod} />\n          </Box>\n        </Paper>\n      </Box>\n      <Paper elevation={3}>\n        <Box p={1}>\n          <StudySourceInput sources={sources} setSources={setSources} />\n        </Box>\n      </Paper>\n      <Box my={2}>\n        <Button color=\"secondary\" fullWidth variant=\"contained\" onClick={handleStartButton}>\n          Go Study\n        </Button>\n      </Box>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport './FlashCard.css';\n\ntype FlipCardProp = {\n  title: string,\n  subtitle: string,\n  content: string,\n};\n\nfunction FlipCard({ title, subtitle, content }: FlipCardProp) {\n  const cardStyle = {\n    width: '100%',\n    minHeight: '100%',\n  };\n  return (\n    <Card style={cardStyle} elevation={24}>\n      <CardHeader title={title} subheader={subtitle} />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {content}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\ntype FlashCardProp = {\n  title: string,\n  front: string,\n  back: string,\n};\n\nexport default function FlashCard({ title, front, back }: FlashCardProp) {\n  const [flipped, setFlip] = useState(false);\n  useEffect(() => {\n    setFlip(false);\n  }, [front]);\n  const [animate, setAnimate] = useState('');\n  const onClick = () => {\n    setAnimate('flipOutY');\n    setTimeout(() => {\n      setAnimate('flipInY');\n      setFlip(!flipped);\n    }, 300);\n  };\n\n  const frontCard = { title, subtitle: 'front', content: front };\n  const backCard = { title, subtitle: 'back', content: back };\n\n  return (\n    <Box\n      className={`animated ${animate}`}\n      height=\"100%\"\n      onClick={onClick}\n    >\n      {flipped ? FlipCard(backCard) : FlipCard(frontCard)}\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport PrevIcon from '@material-ui/icons/ArrowBackIos';\nimport NextIcon from '@material-ui/icons/ArrowForwardIos';\n\nimport cardContainer from '../CardContainer';\nimport FlashCard from '../components/FlashCard';\nimport '../components/FlashCard.css';\n\nexport default function Study() {\n  const [content, setContent] = useState(cardContainer.getContent());\n  const [animate, setAnimate] = useState('');\n\n  const prev = () => {\n    cardContainer.prev();\n    setAnimate('fadeOutRight');\n    setTimeout(() => {\n      setContent(cardContainer.getContent());\n      setAnimate('fadeInLeft');\n    }, 300);\n  };\n\n  const next = () => {\n    cardContainer.next();\n    setAnimate('fadeOutLeft');\n    setTimeout(() => {\n      setContent(cardContainer.getContent());\n      setAnimate('fadeInRight');\n    }, 300);\n  };\n  const iconStyle = {\n    width: '100%',\n    height: '100%',\n  };\n  return (\n    <Grid container spacing={2} style={{ height: '100%' }}>\n      <Grid item xs={2}>\n        <IconButton disabled={!cardContainer.hasPrev()} style={iconStyle} onClick={prev}>\n          <PrevIcon />\n        </IconButton>\n      </Grid>\n      <Grid item xs={8}>\n        <Box height=\"100%\" className={`animated ${animate}`}>\n          <FlashCard title={content.subject} front={content.front} back={content.back} />\n        </Box>\n      </Grid>\n      <Grid item xs={2}>\n        <IconButton disabled={!cardContainer.hasNext()} style={iconStyle} onClick={next}>\n          <NextIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\nimport Header from './screens/Header';\nimport Home from './screens/Home';\nimport Study from './screens/Study';\n\nexport default function App() {\n  const [screen, setScreen] = useState('home');\n  const renderHome = () => (\n    <Home setScreen={setScreen} />\n  );\n  const renderStudy = () => (\n    <Study />\n  );\n  return (\n    <Container>\n      <Box height=\"10vh\">\n        <Header />\n      </Box>\n      <Box my={2} height=\"80vh\">\n        {screen === 'home' ? renderHome() : renderStudy()}\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}